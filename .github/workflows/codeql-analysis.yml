# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '33 9 * * 4'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v1
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v1

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v1
    
    - name: SonarCloud Scan
    # You may pin to the exact commit or the version.
    # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
    uses: SonarSource/sonarcloud-github-action@v1.6
    with:
      # Additional arguments to the sonarcloud scanner
      args: # optional
      # Set the sonar.projectBaseDir analysis property
      projectBaseDir: # optional, default is .
    
    - name: Codacy Analysis CLI
    # You may pin to the exact commit or the version.
    # uses: codacy/codacy-analysis-cli-action@0de770495bd94bdac1ba7d5043a72b252ddbeec3
    uses: codacy/codacy-analysis-cli-action@4.0.0
    with:
      # Run with verbose output
      verbose: # optional
      # API project token to retrieve your remote Codacy configuration for the project being analyzed
      project-token: # optional
      # API account token to retrieve your remote Codacy configuration for the project being analyzed
      api-token: # optional
      # Codacy's API URL, to retrieve your remote Codacy configuration
      codacy-api-base-url: # optional
      # Format of the output file
      format: # optional
      # Send analysis results to an output file
      output: # optional
      # The directory to be analyzed
      directory: # optional
      # Number of tools to run in parallel
      parallel: # optional
      # Maximum number of issues allowed for the analysis to succeed
      max-allowed-issues: # optional, default is 2147483647
      # The name of the tool to analyze the code
      tool: # optional
      # Maximum time each tool has to execute
      tool-timeout: # optional
      # Upload analysis results to Codacy
      upload: # optional
      # Fail the analysis if any tool fails to run
      fail-if-incomplete: # optional
      # Allow network access for tools
      allow-network: # optional
      # Force files to be readable by changing the permissions before running the analysis
      force-file-permissions: # optional
      # Reduce issue severity by one level, for non-security issues, for compatibility with GitHub's code scanning feature. This option will only have an effect when used in conjunction with '--format sarif'.
      gh-code-scanning-compat: # optional
      # Run dockerized tools. Possible values (true|false) Check the full list in https://docs.codacy.com/repositories-configure/codacy-configuration-file/#which-tools-can-be-configured-and-which-name-should-i-use
      run-docker-tools: # optional, default is true
      # Run GoSec. Possible values (true|false)
      run-gosec: # optional
      # Run StaticCheck. Possible values (true|false)
      run-staticcheck: # optional
      # Path to a file containing the output of Clang Tidy.
      clang-tidy-output: # optional
      # Path to a file containing the output of Faux Pas.
      faux-pas-output: # optional
    
